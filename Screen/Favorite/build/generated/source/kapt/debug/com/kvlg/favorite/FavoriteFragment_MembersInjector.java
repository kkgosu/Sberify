// Generated by Dagger (https://dagger.dev).
package com.kvlg.favorite;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavoriteFragment_MembersInjector implements MembersInjector<FavoriteFragment> {
  private final Provider<FavoriteNavigation> navigationProvider;

  public FavoriteFragment_MembersInjector(Provider<FavoriteNavigation> navigationProvider) {
    this.navigationProvider = navigationProvider;
  }

  public static MembersInjector<FavoriteFragment> create(
      Provider<FavoriteNavigation> navigationProvider) {
    return new FavoriteFragment_MembersInjector(navigationProvider);
  }

  @Override
  public void injectMembers(FavoriteFragment instance) {
    injectNavigation(instance, navigationProvider.get());
  }

  @InjectedFieldSignature("com.kvlg.favorite.FavoriteFragment.navigation")
  public static void injectNavigation(FavoriteFragment instance, FavoriteNavigation navigation) {
    instance.navigation = navigation;
  }
}
