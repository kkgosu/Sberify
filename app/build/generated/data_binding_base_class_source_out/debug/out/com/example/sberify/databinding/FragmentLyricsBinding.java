// Generated by view binder compiler. Do not edit!
package com.example.sberify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.sberify.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLyricsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LoadingAnimBinding animation;

  @NonNull
  public final ImageButton favoriteButton;

  @NonNull
  public final TextView lyrics;

  @NonNull
  public final ConstraintLayout lyricsContainer;

  @NonNull
  public final FloatingActionButton playButton;

  @NonNull
  public final TextView title;

  @NonNull
  public final Toolbar toolbar;

  private FragmentLyricsBinding(@NonNull ConstraintLayout rootView,
      @NonNull LoadingAnimBinding animation, @NonNull ImageButton favoriteButton,
      @NonNull TextView lyrics, @NonNull ConstraintLayout lyricsContainer,
      @NonNull FloatingActionButton playButton, @NonNull TextView title, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.animation = animation;
    this.favoriteButton = favoriteButton;
    this.lyrics = lyrics;
    this.lyricsContainer = lyricsContainer;
    this.playButton = playButton;
    this.title = title;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLyricsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLyricsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_lyrics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLyricsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animation;
      View animation = rootView.findViewById(id);
      if (animation == null) {
        break missingId;
      }
      LoadingAnimBinding binding_animation = LoadingAnimBinding.bind(animation);

      id = R.id.favorite_button;
      ImageButton favoriteButton = rootView.findViewById(id);
      if (favoriteButton == null) {
        break missingId;
      }

      id = R.id.lyrics;
      TextView lyrics = rootView.findViewById(id);
      if (lyrics == null) {
        break missingId;
      }

      ConstraintLayout lyricsContainer = (ConstraintLayout) rootView;

      id = R.id.play_button;
      FloatingActionButton playButton = rootView.findViewById(id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentLyricsBinding((ConstraintLayout) rootView, binding_animation,
          favoriteButton, lyrics, lyricsContainer, playButton, title, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
