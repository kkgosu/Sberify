// Generated by Dagger (https://dagger.dev).
package com.kvlg.shared.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import kotlinx.coroutines.CoroutineDispatcher;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoroutineModule_ProvidesMainImmediateDispatcherFactory implements Factory<CoroutineDispatcher> {
  @Override
  public CoroutineDispatcher get() {
    return providesMainImmediateDispatcher();
  }

  public static CoroutineModule_ProvidesMainImmediateDispatcherFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CoroutineDispatcher providesMainImmediateDispatcher() {
    return Preconditions.checkNotNullFromProvides(CoroutineModule.INSTANCE.providesMainImmediateDispatcher());
  }

  private static final class InstanceHolder {
    private static final CoroutineModule_ProvidesMainImmediateDispatcherFactory INSTANCE = new CoroutineModule_ProvidesMainImmediateDispatcherFactory();
  }
}
